{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx"],"names":["open","onClose","children","style","overlayColor","overlayOpacity","zIndex","duration","direction","size","className","overlayStyles","backgroundColor","opacity","drawerStyles","transitionDuration","top","left","transform","width","height","right","bottom","getDirectionStyle","id","type","onChange","checked","role","htmlFor","App","React","useState","isOpen","setIsOpen","toggleDrawer","prevState","justifyContent","alignItems","display","color","borderRadius","border","padding","cursor","onClick","fontWeight","ReactDOM","render","document","getElementById"],"mappings":"ieAiBA,I,EA6CkC,Y,IAC9BA,S,IACAC,mBAAUA,EAAA,eACVC,aACAC,U,IACAC,wBAAeA,EAAA,S,IACfC,0BAAiBA,EAAA,K,IACjBC,kBAASA,EAAA,M,IACTC,oBAAWA,EAAA,MACXC,c,IACAC,gBAAOA,EAAA,MACPC,cAEMC,EAAqC,CACvCC,gBAAiB,GADsB,EAEvCC,QAAS,GAF8B,EAGvCP,OAAQA,GAGNQ,EAAY,GACdR,OAAQA,EADM,EAEdS,mBAAuBR,EAAL,MAlEA,SAAC,EAAD,GAItB,UACI,WACI,MAAO,CACHS,IADG,EAEHC,KAFG,EAGHC,UAHG,2BAIHC,MAJG,EAKHC,OAAQ,SAEhB,YACI,MAAO,CACHJ,IADG,EAEHK,MAFG,EAGHH,UAHG,0BAIHC,MAJG,EAKHC,OAAQ,SAEhB,aACI,MAAO,CACHH,KADG,EAEHI,MAFG,EAGHC,OAHG,EAIHJ,UAJG,0BAKHC,MALG,OAMHC,OAAQX,GAEhB,UACI,MAAO,CACHQ,KADG,EAEHI,MAFG,EAGHL,IAHG,EAIHE,UAJG,2BAKHC,MALG,OAMHC,OAAQX,GAGhB,QACI,UA0BDc,CAAkBf,EAHP,GAAlB,GAOA,OACI,+BAAKgB,GAAG,YACJ,iCACIC,KAAK,WACLD,GAAG,qBACHE,SAAUzB,EACV0B,QAAS3B,IAEb,+BACI4B,KAAK,aACLJ,GAAG,sBACHrB,MAAOW,EACPJ,UAAWA,GAXnB,GAeI,iCACImB,QAAQ,qBACRL,GAAG,oBACHrB,MAAOQ,MC7DRmB,G,MAzCH,WAAO,IAAD,EACcC,IAAMC,UAAS,GAD7B,mBACPC,EADO,KACCC,EADD,KAERC,EAAe,WACjBD,GAAU,SAACE,GAAD,OAAgBA,MAY9B,OACI,yBACIjC,MAAO,CACHkC,eAAgB,SAChBC,WAAY,SACZnB,MAAO,OACPC,OAAQ,QACRmB,QAAS,SAGb,4BAAQpC,MAnBC,CACbS,gBAAiB,UACjB4B,MAAO,OACPC,aAAc,MACdC,OAAQ,OACRC,QAAS,YACTC,OAAQ,WAaqBC,QAASV,GAAlC,eAGA,kBAAC,EAAD,CACInC,KAAMiC,EACNhC,QAASkC,EACT3B,UAAU,OACVC,KAAM,IACNN,MAAO,CAAEwC,QAAS,KAElB,yBAAKxC,MAAO,CAAE2C,WAAY,SAA1B,oBClChBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.50f27fac.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport './styles.scss'\r\n\r\ntype Props = {\r\n    open: boolean\r\n    onClose: () => void\r\n    direction: 'left' | 'right' | 'top' | 'bottom'\r\n    children?: React.ReactNode\r\n    duration?: number\r\n    overlayOpacity?: number\r\n    overlayColor?: String\r\n    style?: React.CSSProperties\r\n    zIndex?: number\r\n    size?: number\r\n    className?: string | undefined\r\n}\r\n\r\nconst getDirectionStyle = (\r\n    dir: string,\r\n    size?: number,\r\n): {} | React.CSSProperties => {\r\n    switch (dir) {\r\n        case 'left':\r\n            return {\r\n                top: 0,\r\n                left: 0,\r\n                transform: 'translate3d(-100%, 0, 0)',\r\n                width: size,\r\n                height: '100vh',\r\n            }\r\n        case 'right':\r\n            return {\r\n                top: 0,\r\n                right: 0,\r\n                transform: 'translate3d(100%, 0, 0)',\r\n                width: size,\r\n                height: '100vh',\r\n            }\r\n        case 'bottom':\r\n            return {\r\n                left: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n                transform: 'translate3d(0, 100%, 0)',\r\n                width: '100%',\r\n                height: size,\r\n            }\r\n        case 'top':\r\n            return {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                transform: 'translate3d(0, -100%, 0)',\r\n                width: '100%',\r\n                height: size,\r\n            }\r\n\r\n        default:\r\n            return {}\r\n    }\r\n}\r\n\r\nconst EZDrawer: React.FC<Props> = function ({\r\n    open,\r\n    onClose = () => {},\r\n    children,\r\n    style,\r\n    overlayColor = '#000',\r\n    overlayOpacity = 0.4,\r\n    zIndex = 100,\r\n    duration = 500,\r\n    direction,\r\n    size = 250,\r\n    className,\r\n}): JSX.Element {\r\n    const overlayStyles: React.CSSProperties = {\r\n        backgroundColor: `${overlayColor}`,\r\n        opacity: `${overlayOpacity}`,\r\n        zIndex: zIndex,\r\n    }\r\n\r\n    const drawerStyles: React.CSSProperties = {\r\n        zIndex: zIndex + 1,\r\n        transitionDuration: `${duration}ms`,\r\n        ...getDirectionStyle(direction, size),\r\n        ...style,\r\n    }\r\n\r\n    return (\r\n        <div id='EZDrawer'>\r\n            <input\r\n                type='checkbox'\r\n                id='EZDrawer__checkbox'\r\n                onChange={onClose}\r\n                checked={open}\r\n            />\r\n            <nav\r\n                role='navigation'\r\n                id='EZDrawer__container'\r\n                style={drawerStyles}\r\n                className={className}\r\n            >\r\n                {children}\r\n            </nav>\r\n            <label\r\n                htmlFor='EZDrawer__checkbox'\r\n                id='EZDrawer__overlay'\r\n                style={overlayStyles}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EZDrawer\r\n","import React from 'react'\n\nimport Drawer from 'react-modern-drawer'\nimport 'react-modern-drawer/dist/index.css'\n\nconst App = () => {\n    const [isOpen, setIsOpen] = React.useState(false)\n    const toggleDrawer = () => {\n        setIsOpen((prevState) => !prevState)\n    }\n\n    const btnStyle = {\n        backgroundColor: '#03adfc',\n        color: '#fff',\n        borderRadius: '5px',\n        border: 'none',\n        padding: '10px 25px',\n        cursor: 'pointer',\n    }\n\n    return (\n        <div\n            style={{\n                justifyContent: 'center',\n                alignItems: 'center',\n                width: '100%',\n                height: '100vh',\n                display: 'flex',\n            }}\n        >\n            <button style={btnStyle} onClick={toggleDrawer}>\n                Show Drawer\n            </button>\n            <Drawer\n                open={isOpen}\n                onClose={toggleDrawer}\n                direction='left'\n                size={200}\n                style={{ padding: 20 }}\n            >\n                <div style={{ fontWeight: 'bold' }}>Hello World!</div>\n            </Drawer>\n        </div>\n    )\n}\n\nexport default App\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}